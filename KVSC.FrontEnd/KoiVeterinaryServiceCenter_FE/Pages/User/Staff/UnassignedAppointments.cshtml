@page
@using KVSC.Infrastructure.DTOs.Service
@using KVSC.Infrastructure.DTOs
@{
    Layout = "_layoutBoard";
}
@model KoiVeterinaryServiceCenter_FE.Pages.User.Staff.UnassignedAppointmentsModel
@{
    ViewData["Title"] = "Unassigned Appointments";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Unassigned Appointments</h2>
    <table class="table table-hover table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Customer Name</th>
                <th>Service Name</th>
                <th>Status</th>
                <th>Appointment Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.UnassignedAppointments.Extensions?.Data != null && Model.UnassignedAppointments.Extensions.Data.Count > 0)
            {
                foreach (var appointment in Model.UnassignedAppointments.Extensions.Data)
                {
                    <tr>
                        <td>@appointment.CustomerName</td>
                        <td>@appointment.ServiceName</td>
                        <td>@appointment.Status</td>
                        <td>@appointment.AppointmentDate.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>
                            <button class="btn btn-primary btn-sm"
                                    data-bs-toggle="modal"
                                    data-bs-target="#assignModal"
                                    onclick="loadVeterinarians('@appointment.AppointmentListId')">
                                Assign
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center">No appointments available</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<!-- Modal -->
<div class="modal fade" id="assignModal" tabindex="-1" aria-labelledby="assignModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="assignModalLabel">Assign Veterinarian</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" id="assignForm">
                    <input type="hidden" name="appointmentId" id="appointmentId" />
                    <ul id="veterinariansList" class="list-group">
                        <!-- Danh sách bác sĩ sẽ được load vào đây -->
                    </ul>
                    <div class="mt-3 text-end">
                        <button type="submit" class="btn btn-success">Assign</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedVeterinarianId = null;
   
    async function loadVeterinarians(appointmentId) {
        document.getElementById('appointmentId').value = appointmentId;
        const response = await fetch(`/User/Staff/UnassignedAppointments?handler=Veterinarians&appointmentId=${appointmentId}`);
        const result = await response.json();

        const listElement = document.getElementById('veterinariansList');
        listElement.innerHTML = ''; // Clear previous content

        if (result && result.extensions?.data.length > 0) {
            result.extensions.data.forEach(vet => {
                const listItem = document.createElement('li');
                listItem.className = 'list-group-item d-flex justify-content-between align-items-center';

                // Tạo nội dung cho tooltip
                const tooltipContent = `
                    <strong>Qualifications:</strong> ${vet.qualifications}<br />
                    <strong>Working Hours:</strong> ${vet.startTime} - ${vet.endTime}<br />
                    <strong>Specialty:</strong> ${vet.specialty}
                `;

                // Thiết lập HTML cho phần tử danh sách
                listItem.innerHTML = `
                    <span data-bs-toggle="tooltip" data-html="true" title="${tooltipContent}">${vet.fullName}</span>
                    <input type="radio" name="veterinarianId" value="${vet.veterinarianId}" onclick="selectVeterinarian('${vet.veterinarianId}')" />
                `;

                // Thêm phần tử danh sách vào danh sách
                listElement.appendChild(listItem);
            });
            $(function () {
                $('[data-bs-toggle="tooltip"]').tooltip({
                    html: true // Cho phép sử dụng HTML trong tooltip
                });
            });
        } else {
            listElement.innerHTML = '<li class="list-group-item">No veterinarians available</li>';
        }
    }

   

    function selectVeterinarian(veterinarianId) {
        selectedVeterinarianId = veterinarianId;
    }

    document.getElementById('assignForm').addEventListener('submit', function (e) {
        e.preventDefault();
        if (!selectedVeterinarianId) {
            alert('Please select a veterinarian!');
            return;
        }
        this.action = `/User/Staff/UnassignedAppointments?handler=AssignVeterinarian&appointmentId=${document.getElementById('appointmentId').value}&veterinarianId=${selectedVeterinarianId}`;
        this.submit();
    });

  
</script>
