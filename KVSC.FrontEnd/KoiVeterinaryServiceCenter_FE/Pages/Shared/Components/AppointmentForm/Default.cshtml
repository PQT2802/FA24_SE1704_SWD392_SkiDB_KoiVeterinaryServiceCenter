@using Microsoft.AspNetCore.Mvc.TagHelpers
@model KVSC.Infrastructure.DTOs.AppointmentFormViewModel

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card p-4">
                <h2 class="text-center mb-4">Book an Appointment</h2>

                <form id="appointmentForm" class="needs-validation" novalidate>
                    <!-- Customer Information (Read-Only) -->
                    <div class="form-group mb-3">
                        <label for="customerName">Name</label>
                        <input type="text" class="form-control" id="customerName" name="CustomerName" value="@Model.CustomerName" readonly />
                    </div>

                    <div class="form-group mb-3">
                        <label for="customerEmail">Email Address</label>
                        <input type="text" class="form-control" id="customerEmail" name="CustomerEmail" value="@Model.CustomerEmail" readonly />
                    </div>

                    <div class="form-group mb-3">
                        <label for="customerPhone">Phone Number</label>
                        <input type="text" class="form-control" id="customerPhone" name="CustomerPhone" value="@Model.CustomerPhone" readonly />
                    </div>

                    <!-- Pet Selection Dropdown -->
                    <div class="form-group mb-3">
                        <label for="petId">Select Your Pet</label>
                        <select class="form-control" id="petId" name="PetId" required>
                            <option value="">-- Select a Pet --</option>
                            @foreach (var pet in Model.Pets)
                            {
                            <option value="@pet.Id">@pet.Name</option>
                            }
                        </select>
                        <div class="invalid-feedback">Please select a pet.</div>
                    </div>

                    <!-- Service Selection Dropdown -->
                    <div class="form-group mb-3">
                        <label for="serviceId">Select a Service</label>
                        <select class="form-control" id="serviceId" name="ServiceId" required>
                            <option value="">-- Select a Service --</option>
                            @foreach (var service in Model.Services)
                            {
                            <option value="@service.Id">@service.Name - @service.BasePrice.ToString("C") (@service.Duration)</option>
                            }
                        </select>
                        <div class="invalid-feedback">Please select a service.</div>
                    </div>

                    <!-- Appointment Date and Time -->
                    <div class="form-group mb-3">
                        <label for="appointmentDate">Appointment Date & Time</label>
                        <input type="datetime-local" class="form-control" id="appointmentDate" name="AppointmentDate" value="@Model.AppointmentDate.ToString("yyyy-MM-ddTHH:mm")" required />
                        <div class="invalid-feedback">Please select a valid date and time.</div>
                    </div>

                    <!-- Notes (Optional) -->
                    <div class="form-group mb-3">
                        <label for="notes">Notes (Optional)</label>
                        <textarea class="form-control" id="notes" name="Notes" rows="3"></textarea>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn btn-primary btn-block" id="submitAppointment">Book Appointment</button>

                    <!-- Success/Error Message Display -->
                    <div id="message" class="mt-3"></div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById("appointmentForm").addEventListener("submit", function (e) {
        e.preventDefault();

        const formData = new FormData(this);
        const requestData = {
            CustomerName: formData.get("CustomerName"),
            CustomerEmail: formData.get("CustomerEmail"),
            CustomerPhone: formData.get("CustomerPhone"),
            PetId: formData.get("PetId"),
            ServiceId: formData.get("ServiceId"),
            AppointmentDate: formData.get("AppointmentDate"),
            Notes: formData.get("Notes")
        };

        fetch('https://localhost:7283/api/Appointment/service', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestData)
        })
            .then(response => response.json())
            .then(data => {
                const messageDiv = document.getElementById("message");
                if (data.success) {
                    messageDiv.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
                    setTimeout(() => { window.location.reload(); }, 1500);  // Optional reload after success
                } else {
                    messageDiv.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
                }
            })
            .catch(error => console.error('Error:', error));
    });
</script>
